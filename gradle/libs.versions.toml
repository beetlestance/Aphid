[versions]
# Plugins
ktlint = "0.46.1"
spotless = "6.8.0"
ben-manes-dependency-updates = "0.42.0"

# Android
android-gradle-plugin = "7.4.2"
android-lint = "30.0.2"

# Android X
androidx-compose = "1.4.4"
androidx-compose-kotlin-compiler = "1.2.0"
androidx-lifecycle = "2.6.1"
androidx-room = "2.5.1"
androidx-test = "1.3.0"
androidx-hilt = "1.0.0"

#Coil
coil = "2.1.0"

# Google
google-accompanist = "0.31.0-alpha"
google-dagger = "2.42"

# Kotlin
kotlin = "1.8.10"

# Kotlin Coroutines
kotlinx-coroutines = "1.6.4"

# Moshi
moshi = "1.14.0"

# OkHttp
okhttp = "5.0.0-alpha.11"

# Retrofit
retrofit = "2.9.0"

[libraries]
# For more version config
# commons-lang3 = {
#    group = "org.apache.commons",
#    name = "commons-lang3",
#    version = { strictly = "[3.8,4.0[", prefer = "3.9" }
# }

# Android Gradle Plugin
android-tools-build-gradle = { module = "com.android.tools.build:gradle", version.ref = "android-gradle-plugin" }

# Android Lint
android-tools-layoutlib-api = { module = "com.android.tools.layoutlib:layoutlib-api", version.ref = "android-lint" }
android-tools-lint-api = { module = "com.android.tools.lint:lint-api", version.ref = "android-lint" }
android-tools-lint-checks = { module = "com.android.tools.lint:lint-checks", version.ref = "android-lint" }
android-tools-sdk-common = { module = "com.android.tools:sdk-common", version.ref = "android-lint" }

# AndroidX
androidx-annotation = { module = "androidx.annotation:annotation", version = "1.4.0" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version = "1.1.0-alpha09" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version = "1.9.0" }
androidx-palette = { module = "androidx.palette:palette-ktx", version = "1.0.0" }

# AndroidX Compose
androidx-compose-ui-core = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-compose-ui-util = { module = "androidx.compose.ui:ui-util", version.ref = "androidx-compose" }
# Tooling support (Previews, etc.)
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
# Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose" }
# Material Components
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "androidx-compose" }
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "androidx-compose" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "androidx-compose" }
androidx-compose-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "androidx-compose" }
androidx-compose-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "androidx-compose" }

androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "androidx-compose" }

androidx-compose-ui-test = { module = "androidx.compose.ui:ui-test", version.ref = "androidx-compose" }

# Androidx Hilt
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidx-hilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version = "1.0.0" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "androidx-hilt" }

# AndroidX Lifecycle
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }

# AndroidX Navigation
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version = "2.5.3" }

# AndroidX Room
androidx-room-common = { module = "androidx.room:room-common", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
# Kotlin Extensions and Coroutines support for Room
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "androidx-room" }

# AndroidX Test
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version = "1.1.5" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test" }

# AndroidX Work
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version = "2.8.1" }

# Coil
coil-core = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

# Google Accompanist
google-accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "google-accompanist" }
google-accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "google-accompanist" }
google-accompanist-system-ui-controller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "google-accompanist" }

# Google Dagger
google-dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "google-dagger" }
google-dagger-core = { module = "com.google.dagger:dagger", version.ref = "google-dagger" }

# Google Hilt
google-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "google-dagger" }
google-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "google-dagger" }
google-hilt-gradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "google-dagger" }
google-hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "google-dagger" }

# Google Material Theme
google-material-compose-theme-adapter = { module = "com.google.android.material:compose-theme-adapter", version = "1.2.1" }
google-material-core = { module = "com.google.android.material:material", version = "1.8.0" }

# Google Firebase
google-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version = "18.2.10" }

# Google Truth
google-truth = { module = "com.google.truth:truth", version = "1.1.3" }

# Leak Canary
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version = "2.9.1" }

# Kotlin
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# Kotlin Coroutine
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-corroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

# Moshi
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-core = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

# OkHttp
okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-url-connection = { module = "com.squareup.okhttp3:okhttp-urlconnection", version.ref = "okhttp" }

# Retrofit
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

# Test
test-junit-core = { module = "junit:junit", version = "4.13.2" }
test-mock-core = { module = "io.mockk:mockk", version = "1.13.4" }
test-robolectric-core = { module = "org.robolectric:robolectric", version = "4.9.2" }

# Timber
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

[bundles]

# Android Lint
android-tools-lint = ["android-tools-layoutlib-api", "android-tools-lint-api",
    "android-tools-lint-checks", "android-tools-sdk-common"]

# AndroidX Compose
androidx-compose = ["androidx-compose-animation",
    "androidx-compose-foundation", "androidx-compose-layout", "androidx-compose-livedata",
    "androidx-compose-material", "androidx-compose-runtime", "androidx-compose-ui-core",
    "androidx-compose-ui-test", "androidx-compose-ui-tooling", "androidx-compose-ui-util"]

# AndroidX Test
androdidx-test = ["androidx-test-core", "androidx-test-ext-junit", "androidx-test-rules", "androidx-test-runner"]

# Google Accompanist
google-accompanist = ["google-accompanist-system-ui-controller",
    "google-accompanist-flowlayout",
    "google-accompanist-pager"
]

# Moshi
moshi = ["moshi-adapters", "moshi-core", "moshi-kotlin"]

# OkHttp
okhttp = ["okhttp-core", "okhttp-logging-interceptor", "okhttp-url-connection"]